# Copyright 2023-2025 MICRORISC s.r.o.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

image: iqrftech/debian-c-builder:debian-bookworm-amd64

stages:
  - test
  - jsonnet

.ccache-template: &ccache-template
  before_script:
    - export CCACHE_COMPILERCHECK="content"
    - export CCACHE_COMPRESS="true"
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="${CCACHE_BASEDIR}/.ccache"
    - ccache --zero-stats --show-stats
    - echo "CCACHEDIR=~/.ccache" > ~/.pbuilderrc
  after_script:
    - export CCACHE_DIR="${PWD}/.ccache"
    - ccache --show-stats
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .ccache/

test:
  image: iqrftech/debian-c-builder:${DIST}-amd64
  stage: test
  script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
    - cmake -Bbuild -H. -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON -DUSE_CCACHE=TRUE
    - cmake --build build
    - mkdir -p coverage
    - ctest --verbose --test-dir build/tests --output-junit ../../ctest.xml --exclude-regex "_GPIO$"
    - gcovr --keep --xml-pretty --exclude-unreachable-branches --print-summary -o coverage.xml --filter src/ --filter include/ --root .
  <<: *ccache-template
  after_script:
    - !reference [.ccache-template, after_script]
    - codecov --url http://codecov.iqrf.org do-upload --git-service gitlab_enterprise -r open-source:iqrf-sdk/libiqrf --env ${DIST} --report-type test_results --file ctest.xml
    - codecov --url http://codecov.iqrf.org upload-process --git-service gitlab_enterprise -r open-source:iqrf-sdk/libiqrf --env ${DIST} --plugin gcov --gcov-include 'src/**' --gcov-include 'include/**' --gcov-ignore 'examples/**' --gcov-ignore 'tests/**'
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 14 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: ctest.xml
  parallel:
    matrix:
      - DIST:
          - debian-bookworm
          - debian-trixie

# Jsonnet
jsonnet-build:
  image: alpine:latest
  stage: jsonnet
  script:
    - apk add -U jsonnet
    - jsonnet -o .gitlab/packages.yml .gitlab/packages.jsonnet
  artifacts:
    paths:
      - .gitlab/packages.yml

jsonnet-trigger-packages:
  stage: jsonnet
  needs:
    - jsonnet-build
  trigger:
    forward:
      pipeline_variables: true
    include:
      - artifact: .gitlab/packages.yml
        job: jsonnet-build
    strategy: depend

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
