set(LIB_NAME gpio)
file(GLOB LIB_HEADERS "${libiqrf_SOURCE_DIR}/include/${LIB_NAME}/*.h" "${libiqrf_SOURCE_DIR}/include/${LIB_NAME}/*.hpp")
file(GLOB LIB_SOURCES "*.c" "*.cpp")

if (BUILD_STATIC)
    set(LIBGPIOD_LIB libgpiod.a gpiod)
else ()
    set(LIBGPIOD_LIB gpiod)
endif ()

find_library(HAVE_LIBGPIOD NAMES ${LIBGPIOD_LIB})
if (HAVE_LIBGPIOD)
    set(LIB_LIBGPIOD ${HAVE_LIBGPIOD})
    message(STATUS "libgpiod found: ${LIB_LIBGPIOD}")
    set(CMAKE_REQUIRED_LIBRARIES ${LIB_LIBGPIOD})
else ()
    message(FATAL_ERROR "libgpiod not found")
endif ()

if (BUILD_STATIC)
    add_library(iqrf_gpio_static STATIC ${LIB_SOURCES} ${LIB_HEADERS})
    target_include_directories(iqrf_gpio_static PUBLIC ${libiqrf_SOURCE_DIR}/include)
    target_link_libraries(iqrf_gpio_static ${LIB_LIBGPIOD} iqrf_common iqrf_debug)
    set_target_properties(iqrf_gpio_static PROPERTIES OUTPUT_NAME iqrf_gpio)
    set_target_properties(iqrf_gpio_static PROPERTIES PREFIX "lib")
endif ()

add_library(iqrf_gpio SHARED ${LIB_SOURCES} ${LIB_HEADERS})
add_library(iqrf::gpio ALIAS iqrf_gpio)
target_link_libraries(iqrf_gpio ${LIB_LIBGPIOD} iqrf_common iqrf_debug)
target_include_directories(iqrf_gpio PUBLIC ${libiqrf_SOURCE_DIR}/include)

install(TARGETS iqrf_gpio LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${LIB_NAME})
if (BUILD_STATIC)
    install(TARGETS iqrf_gpio_static ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${LIB_NAME})
endif ()
install(DIRECTORY ${libiqrf_SOURCE_DIR}/include/iqrf/${LIB_NAME} DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/iqrf")
